A51 MACRO ASSEMBLER  19BEC0624_5C                                                         11/15/2021 16:48:36 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\19BEC0624_5C.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE 19BEC0624_5C.ASM SET(SMALL) DEBUG PRINT(.\Listings\19BEC0624_5C.lst) OB
                      JECT(.\Objects\19BEC0624_5C.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;    Write an 8051Assembly level program using interrupts to do the following: (a) Receive 
                             starting letter of your name as input data serially and sent it to P0,
                       2     ;    (b) Have P1 port read and transmitted serially, and a copy given to P2,
                       3     ;    (c) Make timer 0 generate a square wave of 5 kHz frequency on P3.2. 
                       4     ;          Assume that XTAL-11.0592. Set the baud rate at 4800.
                       5     
                       6     ; label         mnemonics               Operands                comments
0000                   7                             ORG                     0
0000 020030            8                             LJMP                    MAIN
000B                   9                             ORG                     000BH        ;ISR for timer 0
000B B2B2             10                             CPL                     P3.2         ;toggle P3.2
000D 32               11                             RETI                         ;return from ISR
0023                  12                             ORG                     23H ;
0023 020100           13                             LJMP                    SERIAL       ;jump to serial interrupt ISR
                      14                             
0030                  15                             ORG                     30H
0030 7590FF           16     MAIN:       MOV                         P1,#0FFH             ;make P1 an input port
                      17                ;MOV P0,#00H                                 ;make P0 an output port
0033 758922           18                             MOV                     TMOD,#22H            ;timer 0 and 1,mode 2(
                             auto reload)
0036 758DF4           19                             MOV                     TH1,#-12           ;4800 baud rate
0039 759850           20                             MOV                     SCON,#50H            ;8-bit, 1 stop, ren en
                             abled
003C 758C48           21                             MOV                     TH0,#-184             ;for 5kHZ wave
003F 75A892           22                             MOV                     IE,#10010010B          ;92H-enable serial i
                             nt. & timer int.
0042 D28E             23                             SETB                    TR1                  ;start timer 1
0044 D28C             24                             SETB                    TR0                  ;start timer 0
0046 E590             25     BACK:       MOV                     A,P1                    ;read data from port 1
0048 F599             26                             MOV                     SBUF,A         ;give a copy to SBUF        
                                          
004A F5A0             27                             MOV                     P2,A             ;send it to P2
004C 80F8             28                             SJMP                    BACK         ;stay in loop indefinitely
                      29     ;-----------------SERIAL PORT ISR
0100                  30                             ORG                     100H
0100 209906           31     SERIAL:     JB                          TI,TRANS        ;jump if TI is high
0103 E599             32                             MOV                     A,SBUF         ;otherwise due to receive
0105 F580             33                             MOV                     P0,A             ;send serial data to P0
0107 C298             34                             CLR                     RI             ;clear RI since CPU doesn’t
                      35                                                             ;return from ISR
0109 C299             36     TRANS:      CLR                         TI             ;clear TI since CPU doesn’t
010B 32               37                             RETI                                    ;return from ISR
                      38                             END
A51 MACRO ASSEMBLER  19BEC0624_5C                                                         11/15/2021 16:48:36 PAGE     2

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

BACK . . . . . . .  C ADDR   0046H   A   
IE . . . . . . . .  D ADDR   00A8H   A   
MAIN . . . . . . .  C ADDR   0030H   A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
RI . . . . . . . .  B ADDR   0098H.0 A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SERIAL . . . . . .  C ADDR   0100H   A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TRANS. . . . . . .  C ADDR   0109H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
