A51 MACRO ASSEMBLER  19BEC0624_1E                                                         09/27/2021 01:12:47 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\19BEC0624_1E.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE 19BEC0624_1E.ASM SET(SMALL) DEBUG PRINT(.\Listings\19BEC0624_1E.lst) OB
                      JECT(.\Objects\19BEC0624_1E.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ;Write a 8051 Assembly level program to add 10 bytes of BCD data and store the result in R2
                              and R3. The bytes are stored in ROM space starting at 300H. 
                       2     ;The data would look as follows:
                       3     ;MYDATA:        DB              ;pick your data. ( 10  DATA  )
                       4     ;EX: 22H,43H,23H,34H,31H,77H,91H,33H,43H,07H  
                       5     ;Notice that you must first bring the data from ROM space into the CPU's RAM, then add them
                              together. Use a simulator to single-step the program and examine the data. 
                       6     ;label  mnemonics       Operands             comments                               adressi
                             ng mode              machine cycle   memory byte             type of instruction
                       7     
0000                   8                     ORG                     000H            
0000 900300            9                     MOV                     DPTR,#300H      ;set initial value of dptr         
                                                   immediate                              1                             
                               3                                       data transfer   
0003 780A             10                     MOV                     R0,#10          ;R0 count is 10                    
                                                           immediate                              1                     
                                       3                                       data transfer
0005 E4               11     LOOP:   CLR                     A                       ;clr Acc register                  
                                                                                                          1             
                                               1                                       boolean
0006 93               12                     MOVC            A,@A+DPTR   ;code memory accumulator                       
                                   indexed                                1                               3             
                                                       data transfer
0007 2A               13                     ADD                     A,R2            ;initiall R2=0,else R2=sum         
                                                   direct                                 1                             
                               2                                       arithmetic
0008 D4               14                     DA                      A                       ;decimal adjust acc        
                                                                                                                  1     
                                                       1                                       arithmetic
0009 5001             15                     JNC                     NEXT            ;check for carry                   
                                                                                                          1             
                                               1                                       boolean 
000B 0B               16                     INC                     R3                      ;carry count               
                                                                                                                  1     
                                                       1                                       arithmetic
000C A3               17     NEXT:   INC                     DPTR            ;data pointer is incremented to the        
                                                                                  1                               1     
                                                               arithmetic
                      18                                                                     ;next data location
000D FA               19                     MOV                     R2,A            ;result of addition is moved to    
                                           direct                                 1                               3     
                                                               data transfer
000E D8F5             20                     DJNZ            R0,LOOP         ;count is decremented for next itteration  
                                                                          2                               2             
                                                       program branching
0010 80FE             21     HERE:   SJMP            HERE            ;Result in R2 and R3                               
                                   relative                                                                             
                                                       program branching
                      22     ;------------------------------------------------------------------------------------------
                             --------------------------------------------------
0300                  23                     ORG                     300H
0300 0001090B         24                     DB                      00H,01H,09H,0BH,0EH,0CH,00H,06H,02H,04H
0304 0E0C0006                
0308 0204                    
                      25                     END
                             
                                             
A51 MACRO ASSEMBLER  19BEC0624_1E                                                         09/27/2021 01:12:47 PAGE     2

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

HERE . . . . . . .  C ADDR   0010H   A   
LOOP . . . . . . .  C ADDR   0005H   A   
NEXT . . . . . . .  C ADDR   000CH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
